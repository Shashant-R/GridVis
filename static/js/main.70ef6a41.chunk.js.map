{"version":3,"sources":["components/Cell.js","components/Grid.js","components/Button.js","App.js","components/Prob1Cell.js","components/Prob1Grid.js","Prob1.js","Main.js","index.js"],"names":["Cell","key","mouseStart","mouseHover","mouseEnd","name","isWall","isVisited","isVisiting","isSource","isDestination","isPath","className","onMouseDown","onMouseEnter","onMouseUp","Grid","walls","visited","visiting","source","destination","path","grid","row","push","col","includes","Button","type","content","buttonClick","disable","onClick","App","useState","setWalls","setVisited","setVisiting","setSource","setDestination","source_selected","setSource_selected","destination_selected","setDestination_selected","disable_source","setDisable_source","disable_destination","setDisable_destination","disable_start","setDisable_start","start","setStart","stack","setStack","BFS","setBFS","parent","setParent","setPath","temp_path","setTemp_path","ctr","setCtr","pressed","setPressed","handleClick","filter","item","useEffect","setTimeout","length","t1","t2","t3","t4","dx","dy","q","par","vis","Array","fill","unshift","pop","x","y","dad","i","curr_x","curr_y","child","bfs","s","ele","dfs","temp","curr","shortestpath","Prob1Cell","room_no","randomColor","c","toString","toUpperCase","substring","intToRGB","str","hash","charCodeAt","hashCode","style","background","Prob1Grid","rooms","room_ctr","Copy","setRoom_ctr","setRooms","room_list","console","log","j","pos","Main","window","onload","Particles","init","selector","color","connectParticles","to","component","Prob1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70ef6a41.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Cell({key, mouseStart, mouseHover, mouseEnd, isWall, isVisited, isVisiting, isSource, isDestination, isPath}) {\r\n    let name = 'cell '\r\n    if(isWall)\r\n        name = 'cell wall'\r\n    if(isVisited)\r\n        name = 'cell visited'\r\n    if(isVisiting)\r\n        name = 'cell visiting'\r\n    if(isSource)\r\n        name = 'cell src'\r\n    if(isDestination)\r\n        name = 'cell dest'\r\n    if(isPath)\r\n        name = 'cell path'\r\n    return <div className={name}\r\n                //onClick={()=>handleClick(key)}\r\n                onMouseDown={()=>mouseStart(key)}\r\n                onMouseEnter={()=>mouseHover(key)}\r\n                onMouseUp={()=>mouseEnd(key)}\r\n            />\r\n}","import React from 'react';\r\nimport Cell from './Cell';\r\nexport default function Grid({mouseStart, mouseHover, mouseEnd, walls, visited, visiting, source, destination, path}){\r\n    const N = 20    // number of rows\r\n    const M = 20    // number of columns\r\n    const grid = []\r\n    for( let row = 0; row < N; row++)\r\n    {\r\n        grid.push([])\r\n        for( let col = 0; col < M; col++)\r\n        {\r\n            let key = `${row} ${col}`\r\n            grid[row].push(<Cell \r\n                key={key} \r\n                mouseStart={()=> mouseStart(key)}\r\n                mouseHover={()=> mouseHover(key)} \r\n                mouseEnd={()=> mouseEnd(key)} \r\n                isWall={walls.includes(key)} \r\n                isVisited={visited.includes(key)}\r\n                isVisiting={visiting.includes(key)}\r\n                isSource={source===key}\r\n                isDestination={destination===key}\r\n                isPath = {path.includes(key)}\r\n                />)\r\n        }\r\n    }\r\n    return (\r\n        <div className='grid-board'>\r\n            {grid}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Button({type, content, buttonClick, disable}){\r\n    return (<div\r\n            className = {`${type} ${disable ? 'disabled':''}`}\r\n            onClick = {()=>buttonClick(type)}\r\n            >\r\n            <h4 className='content'>{content}</h4>\r\n    </div>)\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Grid from './components/Grid';\nimport Button from './components/Button';\nconst shortestpath = (source, destination, parent) => {\n  let path = []\n  let curr = parent[destination];\n  while(curr!==source)\n  {\n    path.unshift(curr)\n    curr = parent[curr]\n  }\n  return path\n}\nconst bfs = (walls, visited, visiting, parent) => {\n  const N = 20\n  const M = 20\n  const dx = [0, 0, 1, -1, 1, 1, -1, -1];\n  const dy = [1, -1, 0, 0, -1, 1, 1, -1];\n  var q = [];\n  var par = parent;\n  let vis = new Array(N);\n  for (let row = 0; row < N; row++) \n  {\n      vis[row] = new Array(M).fill(0);\n  }\n  for(let row=0;row<N;row++)\n  {\n    for(let col=0;col<M;col++)\n    {\n      if(visited.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1;\n      }\n      if(visiting.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1\n        q.unshift([row, col])\n      }\n    }\n  }\n  while(q.length>0)\n  {\n    let [x, y] = q.pop()\n    let dad = `${x} ${y}`\n    visited.unshift(dad)\n    visiting = visiting.filter(item=>item!==dad)\n    \n    for(let i=0;i<4;i++)\n    {\n      let curr_x = x+dx[i];\n      let curr_y = y+dy[i];\n      if(curr_x<0||curr_x>=N||curr_y<0||curr_y>=M)continue;\n\n      let child = `${curr_x} ${curr_y}`\n      \n      if(vis[curr_x][curr_y]===0 && !walls.includes(child))\n      {\n          par[child] = dad\n          vis[curr_x][curr_y] = 1\n          visiting.unshift(child)\n      }\n    }\n  }\n  return [visited, visiting, par]\n} //end of bfs\nconst dfs=(walls, stack, visited, visiting, parent)=>{\n  const N = 20\n  const M = 20\n  const dx = [0, 0, 1, -1, 1, 1, -1, -1];\n  const dy = [1, -1, 0, 0, -1, 1, 1, -1];\n  var par = parent\n  var s = stack;\n  let vis = new Array(N);\n  for (let row = 0; row < N; row++) \n  {\n      vis[row] = new Array(M).fill(0);\n  }\n  for(let row=0;row<N;row++)\n  {\n    for(let col=0;col<M;col++)\n    {\n      if(visited.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1;\n      }\n      if(visiting.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1\n        s.push([row, col])\n      }\n    }\n  }\n  if(s.length>0)\n  {\n    let ele = s.pop()\n    let x = ele[0]\n    let y = ele[1]\n    let dad = `${x} ${y}`\n    visited.unshift(dad)\n    for(let i=0;i<4;i++)\n    {\n      let curr_x = x + dx[i]\n      let curr_y = y + dy[i]\n      if(curr_x<0||curr_y<0||curr_x>=N||curr_y>=M)continue;\n  \n      let child = `${curr_x} ${curr_y}`\n  \n      if(vis[curr_x][curr_y]===0 && !walls.includes(child))\n      {\n        vis[curr_x][curr_y]=1\n        par[child] = dad\n        s.push([curr_x, curr_y])\n      }\n    }\n  }\n  if(s.length>0)\n  {\n    let ele = s.pop()\n    let x = ele[0]\n    let y = ele[1]\n    let dad = `${x} ${y}`\n    visiting=[dad]\n    while(s.length>0 && visited.includes(visiting[0]))\n    {\n      let ele = s.pop()\n      let x = ele[0]\n      let y = ele[1]\n      let dad = `${x} ${y}`\n      visiting=[dad]\n    }\n  }\n  return [s, visited, visiting, par]\n}\nexport default function App() {\n  const [walls, setWalls] = useState([])\n  const [visited, setVisited] = useState([])\n  const [visiting, setVisiting] = useState([])\n\n  const [source, setSource] = useState()\n  const [destination, setDestination] = useState()\n\n  const [source_selected, setSource_selected] = useState(false)\n  const [destination_selected, setDestination_selected] = useState(false)\n\n  const [disable_source, setDisable_source] = useState(false)\n  const [disable_destination, setDisable_destination] = useState(true)\n  const [disable_start, setDisable_start] = useState(true)\n  const [start, setStart] = useState(false)\n  const [stack, setStack] = useState([])\n\n  const [BFS, setBFS] = useState(true)\n  const [parent, setParent] = useState({})\n  const [path, setPath] = useState([])\n  const [temp_path, setTemp_path] = useState([])\n  const [ctr, setCtr] = useState(-1)\n\n  const [pressed, setPressed] = useState(false)\n\n  const mouseStart = (key)=>{\n    if(source_selected||destination_selected)\n      handleClick(key)\n    else\n    {\n      setPressed(true)\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n\n  const mouseHover = (key) => {\n    if(!pressed)return\n    else\n    {\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n\n  const mouseEnd = (key) =>{\n    setPressed(false)\n  }\n\n  const handleClick = (key)=>{\n    if(source_selected)\n    {\n      setSource(key)\n      setSource_selected(false)\n      setDisable_destination(false)\n    }\n    else if(destination_selected)\n    {\n      setDestination(key)\n      setDestination_selected(false)\n      setDisable_start(false)\n    }\n    else //if(disable_destination && disable_source)\n    {\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n  useEffect(() => {\n    setTimeout(()=>{\n      if(visiting.length>0)\n      {\n        let t1,t2,t3,t4 = [] \n        if(BFS)\n          [t1, t2, t3] = bfs(walls, visited, visiting, parent)\n        else \n          [t1, t2, t3, t4] = dfs(walls, stack, visited, visiting, parent)\n        if(BFS)\n          setVisited(t1)\n        else \n          setVisited(t2)\n        if(BFS)\n          setParent(t3)\n        else\n        {\n            setStack(t1)\n            setParent(t4)\n        }\n        if(visiting.includes(destination))\n        {\n          setVisiting([])\n          let temp = shortestpath(source, destination, parent);\n          setTemp_path(temp)\n          setCtr(ctr+1)\n        }\n        else \n        {\n          if(BFS)\n            setVisiting(t2)\n          else\n            setVisiting(t3)\n        }\n      }\n     }, 0)\n\t})\n  useEffect(()=>{\n    setTimeout(() => {\n      if(temp_path.length!==path.length)\n      {\n        setPath([...path, temp_path[ctr]])\n        setCtr(ctr+1)\n      }\n    }, 0);\n  },[ctr])\n  const buttonClick = (type) => {\n    if(type==='source' && !disable_source)\n    {\n      setSource_selected(true)\n      setDisable_source(true)\n    }\n    if(type==='destination' && !disable_destination)\n    {\n      setDestination_selected(true)\n      setDisable_destination(true)\n    }\n    if(type==='start' && !disable_start)\n    {\n      setStart(true)\n      setDisable_start(true)\n      setVisiting([source])\n    }\n    if(type==='dfs' && !start)\n    {\n      setBFS(false)\n    }\n    if(type==='bfs' && !start)\n    {\n      setBFS(true)\n    }\n  }\n  \n\n  return (\n    <div onMouseUp={()=>mouseEnd('')}>\n      <Grid \n      mouseStart={mouseStart}\n      mouseHover={mouseHover}\n      mouseEnd={mouseEnd}\n      walls={walls} \n      visited={visited} \n      visiting={visiting} \n      source={source} \n      destination={destination}\n      path = {path}\n      />\n      <Button type='source' content='Select source cell' buttonClick={buttonClick} disable = {disable_source}/>\n      <Button type='destination' content='Select destination cell' buttonClick={buttonClick} disable = {disable_destination}/>\n      <Button type='start' content='Start' buttonClick={buttonClick} disable={disable_start}/>\n      <Button type='dfs' content='DFS' buttonClick={buttonClick} disable={!BFS}/>\n      <Button type='bfs' content='BFS' buttonClick={buttonClick} disable={BFS}/>\n    </div>\n  );\n}\n","import React from 'react';\r\nfunction hashCode(str) { // java String#hashCode\r\n    var hash = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n       hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    return (157)*hash;\r\n} \r\n\r\nfunction intToRGB(i){\r\n    var c = (i & 0x00FFFFFF)\r\n        .toString(16)\r\n        .toUpperCase();\r\n\r\n    return \"00000\".substring(0, 6 - c.length) + c;\r\n}\r\nexport default function Prob1Cell({key, mouseStart, mouseHover, mouseEnd, isWall, isVisited, isVisiting, room_no}) {\r\n    var randomColor = 'b2c1c9'\r\n    //console.log(`#${randomColor}`)\r\n    let name = 'cell'\r\n    if(isWall)//||key.includes('0 ')||key.includes('19')||key.includes(' 0'))\r\n    {\r\n        name = 'cell wall'\r\n        randomColor = '000413'\r\n    }\r\n    if(isVisited||isVisiting)\r\n    {\r\n        name = 'cell'\r\n        randomColor = intToRGB(hashCode(`ok${room_no*5}o`))\r\n        randomColor+='d8'\r\n        //name+='-'+room_no\r\n    }\r\n    return <div className={name}\r\n                style={{background: isWall?'transparent':`#${randomColor}`}}\r\n                onMouseDown={()=>mouseStart(key)}\r\n                onMouseEnter={()=>mouseHover(key)}\r\n                onMouseUp={()=>mouseEnd(key)\r\n                }\r\n            />\r\n}","import React from 'react';\r\nimport Cell from './Prob1Cell';\r\nexport default function Prob1Grid({mouseStart, mouseHover, mouseEnd, walls, visited, visiting, rooms, room_ctr}){\r\n    const N = 20    // number of rows\r\n    const M = 20    // number of columns\r\n    const grid = []\r\n    for( let row = 0; row < N; row++)\r\n    {\r\n        grid.push([])\r\n        for( let col = 0; col < M; col++)\r\n        {\r\n            let key = `${row} ${col}`\r\n            grid[row].push(<Cell \r\n                key={key} \r\n                mouseStart={()=> mouseStart(key)}\r\n                mouseHover={()=> mouseHover(key)} \r\n                mouseEnd={()=> mouseEnd(key)} \r\n                isWall={walls.includes(key)} \r\n                isVisited={visited.includes(key)}\r\n                isVisiting={visiting.includes(key)}\r\n                room_no={rooms[key]}\r\n                />)\r\n        }\r\n    }\r\n    return (\r\n        <div className='grid-board'>\r\n            {grid}\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Grid from './components/Prob1Grid';\nimport Button from './components/Button';\nconst bfs = (walls, visited, visiting, rooms, room_ctr) => {\n  const N = 20\n  const M = 20\n  const dx = [0, 0, 1, -1, 1, 1, -1, -1];\n  const dy = [1, -1, 0, 0, -1, 1, 1, -1];\n  var q = [];\n  var room_list = rooms\n  let vis = new Array(N);\n  for (let row = 0; row < N; row++) \n  {\n      vis[row] = new Array(M).fill(0);\n  }\n  for(let row=0;row<N;row++)\n  {\n    for(let col=0;col<M;col++)\n    {\n      if(visited.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1;\n      }\n      if(visiting.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1\n        q.unshift([row, col])\n      }\n    }\n  }\n  while(q.length>0)\n  {\n    let [x, y] = q.pop()\n    let dad = `${x} ${y}`\n    visited.unshift(dad)\n    visiting = visiting.filter(item=>item!==dad)\n    \n    for(let i=0;i<4;i++)\n    {\n      let curr_x = x+dx[i];\n      let curr_y = y+dy[i];\n      if(curr_x<0||curr_x>=N||curr_y<0||curr_y>=M)continue;\n\n      let child = `${curr_x} ${curr_y}`\n      \n      if(vis[curr_x][curr_y]===0 && !walls.includes(child))\n      {\n          room_list[child]=room_ctr\n          vis[curr_x][curr_y] = 1\n          visiting.unshift(child)\n      }\n    }\n  }\n  return [visited, visiting, room_list]\n}\nexport default function Copy() {\n  const [walls, setWalls] = useState([])\n  const [visited, setVisited] = useState([])\n  const [visiting, setVisiting] = useState([])\n\n  const [pressed, setPressed] = useState(false)\n  const [disable_start, setDisable_start] = useState(false)\n\n  const [room_ctr, setRoom_ctr] = useState(0)\n  const [rooms, setRooms] = useState({})\n\n  const mouseStart = (key)=>{\n    if(!disable_start)\n    {\n      setPressed(true)\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n\n  const mouseHover = (key) => {\n    if(!pressed)return\n    else\n    {\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n  useEffect(()=>{\n    setTimeout(()=>{\n      if(visiting.length>0)\n      {\n        let [t1, t2, t3] = bfs(walls, visited, visiting, rooms, room_ctr)\n        setVisited(t1)\n        setVisiting(t2)\n        setRooms(t3)\n      }\n     }, 10)\n  })\n  useEffect(()=>{\n    if(disable_start && !visiting.length)\n    {\n      console.log(rooms)\n      for(let i=0;i<20;i++)\n      {\n        for(let j=0;j<20;j++)\n        {\n          let pos = `${i} ${j}`;\n          if(!visited.includes(pos) && !walls.includes(pos))\n          {\n            var x=rooms\n            x[pos]=room_ctr+1\n            setRooms(x)\n            setRoom_ctr(room_ctr+1)\n            setVisiting([pos]);return;\n          }\n        }\n      }\n    }\n  })\n\n  const mouseEnd = (key) =>{\n    setPressed(false)\n  }\n  const buttonClick=(type)=> {\n    if(type==='start')\n    {\n      setDisable_start(true)\n    }\n  }\n\n  return (\n    <div onMouseUp={()=>mouseEnd('')}>\n      <Grid \n      mouseStart={mouseStart}\n      mouseHover={mouseHover}\n      mouseEnd={mouseEnd}\n      walls={walls} \n      visited={visited} \n      visiting={visiting}\n      room_ctr={room_ctr}\n      rooms={rooms}\n      />\n      <Button\n      type = 'source'\n      content = {`Room no: ${room_ctr}`}\n      buttonClick = {buttonClick}\n      disable = {disable_start}  \n      />\n      <Button\n        type = 'start'\n        content = 'Start'\n        buttonClick = {buttonClick}\n        disable = {disable_start}  \n      />\n    </div>\n  );\n}\n","import React from 'react';\r\nimport {Route, NavLink, HashRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport Prob1 from './Prob1';\r\nimport Particles from 'particlesjs';\r\nexport default function Main() {\r\n\r\n    window.onload= function() {\r\n        Particles.init({\r\n            selector: '.background',\r\n            color: '#d10c2a',\r\n            connectParticles: true,\r\n    });\r\n};\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                <h1>GridVis</h1>\r\n                <h3>Grid Problems Visualizer</h3>\r\n                <ul className='header'>\r\n                    <li><NavLink to='/App'>Labyrinth</NavLink></li>\r\n                    <li><NavLink to='/Prob1'>Counting Rooms</NavLink></li>\r\n                </ul>\r\n                <div className='content'>\r\n                    <Route path='/App' component={App}/>\r\n                    <Route path='/Prob1' component={Prob1}/>\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}