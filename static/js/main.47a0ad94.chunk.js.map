{"version":3,"sources":["components/Cell.js","components/Grid.js","components/Button.js","App.js","components/Prob1Cell.js","components/Prob1Grid.js","Prob1.js","Main.js","index.js"],"names":["colors","icons","mdiWall","mdiRun","mdiCheckboxBlankOutline","mdiCheckboxIntermediate","mdiCheckCircle","mdiCheckDecagram","Cell","key","mouseStart","mouseHover","mouseEnd","name","isWall","isVisited","isVisiting","isSource","isDestination","isPath","className","size","dark","bordered","text","onMouseDown","onMouseEnter","onMouseUp","path","color","Grid","walls","visited","visiting","source","destination","grid","row","push","col","includes","Button","type","content","buttonClick","disable","rounded","disabled","onClick","border","App","useState","setWalls","setVisited","setVisiting","setSource","setDestination","source_selected","setSource_selected","destination_selected","setDestination_selected","disable_source","setDisable_source","disable_destination","setDisable_destination","disable_start","setDisable_start","start","setStart","stack","setStack","BFS","setBFS","parent","setParent","setPath","temp_path","setTemp_path","ctr","setCtr","pressed","setPressed","handleClick","filter","item","useEffect","setTimeout","length","t1","t2","t3","t4","dx","dy","q","par","vis","Array","fill","unshift","pop","x","y","dad","i","curr_x","curr_y","child","bfs","s","ele","dfs","temp","curr","shortestpath","style","display","justifyContent","flexDirection","1","mdiNumeric1Circle","2","mdiNumeric2Circle","3","mdiNumeric3Circle","4","mdiNumeric4Circle","5","mdiNumeric5Circle","6","mdiNumeric6Circle","7","mdiNumeric7Circle","8","mdiNumeric8Circle","9","mdiNumeric9Circle","0","mdiNumeric0Circle","Prob1Cell","seed","room_no","randomColor","Math","floor","abs","sin","toString","Prob1Grid","rooms","room_ctr","Copy","setRoom_ctr","setRooms","room_list","console","log","j","pos","Main","to","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47a0ad94.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IconButton } from 'ui-neumorphism';\r\nimport 'ui-neumorphism/dist/index.css';\r\nimport Icon from '@mdi/react';\r\nimport { mdiRun, mdiWall, mdiCheckboxBlankOutline, mdiCheckboxIntermediate, mdiCheckCircle, mdiCheckDecagram } from '@mdi/js';\r\n\r\nconst colors = {\r\n    'cell wall': 'gray',\r\n    'cell src': 'var(--info)',\r\n    'cell visited': '#1e506e',\r\n    'cell visiting': 'var(--info)',\r\n    'cell path': 'var(--success',\r\n    'cell dest': 'var(--error)'\r\n}\r\nconst icons = {\r\n    'cell wall': mdiWall,\r\n    'cell src': mdiRun,\r\n    'cell visiting': mdiCheckboxBlankOutline,\r\n    'cell visited': mdiCheckboxIntermediate,\r\n    'cell path': mdiCheckCircle,\r\n    'cell dest': mdiCheckDecagram\r\n}\r\nexport default function Cell({key, mouseStart, mouseHover, mouseEnd, isWall, isVisited, isVisiting, isSource, isDestination, isPath}) {\r\n    let name = 'cell '\r\n    if(isWall)\r\n        name = 'cell wall'\r\n    if(isVisited)\r\n        name = 'cell visited'\r\n    if(isVisiting)\r\n        name = 'cell visiting'\r\n    if(isSource)\r\n        name = 'cell src'\r\n    if(isDestination)\r\n        name = 'cell dest'\r\n    if(isPath)\r\n        name = 'cell path'\r\n    return <IconButton className={''}\r\n                //onClick={()=>handleClick(key)}\r\n                size='small'\r\n                dark\r\n                bordered\r\n                text={false}\r\n                onMouseDown={()=>mouseStart(key)}\r\n                onMouseEnter={()=>mouseHover(key)}\r\n                onMouseUp={()=>mouseEnd(key)}\r\n            >\r\n                <Icon path={icons[name]}\r\n                    size={1}\r\n                    color= {colors[name]}\r\n                    />\r\n            </IconButton>\r\n}","import React from 'react';\r\nimport Cell from './Cell';\r\nexport default function Grid({mouseStart, mouseHover, mouseEnd, walls, visited, visiting, source, destination, path}){\r\n    const N = 12    // number of rows\r\n    const M = 12    // number of columns\r\n    const grid = []\r\n    for( let row = 0; row < N; row++)\r\n    {\r\n        grid.push([])\r\n        for( let col = 0; col < M; col++)\r\n        {\r\n            let key = `${row} ${col}`\r\n            grid[row].push(<Cell \r\n                key={key} \r\n                mouseStart={()=> mouseStart(key)}\r\n                mouseHover={()=> mouseHover(key)} \r\n                mouseEnd={()=> mouseEnd(key)} \r\n                isWall={walls.includes(key)} \r\n                isVisited={visited.includes(key)}\r\n                isVisiting={visiting.includes(key)}\r\n                isSource={source===key}\r\n                isDestination={destination===key}\r\n                isPath = {path.includes(key)}\r\n                />)\r\n        }\r\n    }\r\n    return (\r\n        <div className='grid-board'>\r\n            {grid}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button as Cutton } from 'ui-neumorphism';\r\nimport 'ui-neumorphism/dist/index.css';\r\nconst colors = {\r\n    'source': 'var(--primary)',\r\n    'destination': 'var(--error)',\r\n    'start': 'var(--success)',\r\n    'dfs': 'var(--primary)',\r\n    'bfs': 'var(--primary)'\r\n}\r\nexport default function Button({type, content, buttonClick, disable}){\r\n    return (\r\n        <Cutton\r\n            /*className = {`5${type} ${disable ? 'disabled':''}`}*/\r\n            dark\r\n            rounded\r\n            color={colors[type]}\r\n            disabled = {disable}\r\n            onClick = {()=>buttonClick(type)}\r\n            border='top'\r\n            >\r\n                {content}\r\n                {/*<h4 className='content'>{content}</h4>*/}\r\n        </Cutton>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Grid from './components/Grid';\nimport Button from './components/Button';\nconst shortestpath = (source, destination, parent) => {\n  let path = []\n  let curr = parent[destination];\n  while(curr!==source)\n  {\n    path.unshift(curr)\n    curr = parent[curr]\n  }\n  return path\n}\nconst bfs = (walls, visited, visiting, parent) => {\n  const N = 12\n  const M = 12\n  const dx = [0, 0, 1, -1, 1, 1, -1, -1];\n  const dy = [1, -1, 0, 0, -1, 1, 1, -1];\n  var q = [];\n  var par = parent;\n  let vis = new Array(N);\n  for (let row = 0; row < N; row++) \n  {\n      vis[row] = new Array(M).fill(0);\n  }\n  for(let row=0;row<N;row++)\n  {\n    for(let col=0;col<M;col++)\n    {\n      if(visited.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1;\n      }\n      if(visiting.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1\n        q.unshift([row, col])\n      }\n    }\n  }\n  while(q.length>0)\n  {\n    let [x, y] = q.pop()\n    let dad = `${x} ${y}`\n    visited.unshift(dad)\n    visiting = visiting.filter(item=>item!==dad)\n    \n    for(let i=0;i<4;i++)\n    {\n      let curr_x = x+dx[i];\n      let curr_y = y+dy[i];\n      if(curr_x<0||curr_x>=N||curr_y<0||curr_y>=M)continue;\n\n      let child = `${curr_x} ${curr_y}`\n      \n      if(vis[curr_x][curr_y]===0 && !walls.includes(child))\n      {\n          par[child] = dad\n          vis[curr_x][curr_y] = 1\n          visiting.unshift(child)\n      }\n    }\n  }\n  return [visited, visiting, par]\n} //end of bfs\nconst dfs=(walls, stack, visited, visiting, parent)=>{\n  const N = 12\n  const M = 12\n  const dx = [0, 0, 1, -1, 1, 1, -1, -1];\n  const dy = [1, -1, 0, 0, -1, 1, 1, -1];\n  var par = parent\n  var s = stack;\n  let vis = new Array(N);\n  for (let row = 0; row < N; row++) \n  {\n      vis[row] = new Array(M).fill(0);\n  }\n  for(let row=0;row<N;row++)\n  {\n    for(let col=0;col<M;col++)\n    {\n      if(visited.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1;\n      }\n      if(visiting.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1\n        s.push([row, col])\n      }\n    }\n  }\n  if(s.length>0)\n  {\n    let ele = s.pop()\n    let x = ele[0]\n    let y = ele[1]\n    let dad = `${x} ${y}`\n    visited.unshift(dad)\n    for(let i=0;i<4;i++)\n    {\n      let curr_x = x + dx[i]\n      let curr_y = y + dy[i]\n      if(curr_x<0||curr_y<0||curr_x>=N||curr_y>=M)continue;\n  \n      let child = `${curr_x} ${curr_y}`\n  \n      if(vis[curr_x][curr_y]===0 && !walls.includes(child))\n      {\n        vis[curr_x][curr_y]=1\n        par[child] = dad\n        s.push([curr_x, curr_y])\n      }\n    }\n  }\n  if(s.length>0)\n  {\n    let ele = s.pop()\n    let x = ele[0]\n    let y = ele[1]\n    let dad = `${x} ${y}`\n    visiting=[dad]\n    while(s.length>0 && visited.includes(visiting[0]))\n    {\n      let ele = s.pop()\n      let x = ele[0]\n      let y = ele[1]\n      let dad = `${x} ${y}`\n      visiting=[dad]\n    }\n  }\n  return [s, visited, visiting, par]\n}\nexport default function App() {\n  const [walls, setWalls] = useState([])\n  const [visited, setVisited] = useState([])\n  const [visiting, setVisiting] = useState([])\n\n  const [source, setSource] = useState()\n  const [destination, setDestination] = useState()\n\n  const [source_selected, setSource_selected] = useState(false)\n  const [destination_selected, setDestination_selected] = useState(false)\n\n  const [disable_source, setDisable_source] = useState(false)\n  const [disable_destination, setDisable_destination] = useState(true)\n  const [disable_start, setDisable_start] = useState(true)\n  const [start, setStart] = useState(false)\n  const [stack, setStack] = useState([])\n\n  const [BFS, setBFS] = useState(true)\n  const [parent, setParent] = useState({})\n  const [path, setPath] = useState([])\n  const [temp_path, setTemp_path] = useState([])\n  const [ctr, setCtr] = useState(-1)\n\n  const [pressed, setPressed] = useState(false)\n\n  const mouseStart = (key)=>{\n    if(source_selected||destination_selected)\n      handleClick(key)\n    else\n    {\n      setPressed(true)\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n\n  const mouseHover = (key) => {\n    if(!pressed)return\n    else\n    {\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n\n  const mouseEnd = (key) =>{\n    setPressed(false)\n  }\n\n  const handleClick = (key)=>{\n    if(source_selected)\n    {\n      setSource(key)\n      setSource_selected(false)\n      setDisable_destination(false)\n    }\n    else if(destination_selected)\n    {\n      setDestination(key)\n      setDestination_selected(false)\n      setDisable_start(false)\n    }\n    else //if(disable_destination && disable_source)\n    {\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n  useEffect(() => {\n    setTimeout(()=>{\n      if(visiting.length>0)\n      {\n        let t1,t2,t3,t4 = [] \n        if(BFS)\n          [t1, t2, t3] = bfs(walls, visited, visiting, parent)\n        else \n          [t1, t2, t3, t4] = dfs(walls, stack, visited, visiting, parent)\n        if(BFS)\n          setVisited(t1)\n        else \n          setVisited(t2)\n        if(BFS)\n          setParent(t3)\n        else\n        {\n            setStack(t1)\n            setParent(t4)\n        }\n        if(visiting.includes(destination))\n        {\n          setVisiting([])\n          let temp = shortestpath(source, destination, parent);\n          setTemp_path(temp)\n          setCtr(ctr+1)\n        }\n        else \n        {\n          if(BFS)\n            setVisiting(t2)\n          else\n            setVisiting(t3)\n        }\n      }\n     }, 0)\n\t})\n  useEffect(()=>{\n    setTimeout(() => {\n      if(temp_path.length!==path.length)\n      {\n        setPath([...path, temp_path[ctr]])\n        setCtr(ctr+1)\n      }\n    }, 0);\n  },[ctr]);\n  const buttonClick = (type) => {\n    if(type==='source' && !disable_source)\n    {\n      setSource_selected(true)\n      setDisable_source(true)\n    }\n    if(type==='destination' && !disable_destination)\n    {\n      setDestination_selected(true)\n      setDisable_destination(true)\n    }\n    if(type==='start' && !disable_start)\n    {\n      setStart(true)\n      setDisable_start(true)\n      setVisiting([source])\n    }\n    if(type==='dfs' && !start)\n    {\n      setBFS(false)\n    }\n    if(type==='bfs' && !start)\n    {\n      setBFS(true)\n    }\n  }\n  \n\n  return (\n    <div onMouseUp={()=>mouseEnd('')} style={{display: 'flex', justifyContent: 'space-around'}}>\n      <Grid \n        mouseStart={mouseStart}\n        mouseHover={mouseHover}\n        mouseEnd={mouseEnd}\n        walls={walls} \n        visited={visited} \n        visiting={visiting} \n        source={source} \n        destination={destination}\n        path = {path}\n      />\n      <div className='action-buttons' style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-around'}}>\n        <Button type='source' content='Source cell' buttonClick={buttonClick} disable = {disable_source}/>\n        <Button type='destination' content='Destination cell' buttonClick={buttonClick} disable = {disable_destination}/>\n        <Button type='start' content='Start' buttonClick={buttonClick} disable={disable_start}/>\n        <Button type='dfs' content='DFS' buttonClick={buttonClick} disable={!BFS || start}/>\n        <Button type='bfs' content='BFS' buttonClick={buttonClick} disable={BFS || start}/>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { IconButton } from 'ui-neumorphism';\r\nimport 'ui-neumorphism/dist/index.css';\r\nimport Icon from '@mdi/react';\r\nimport    { mdiWall, mdiCheckboxBlankOutline, mdiCheckboxIntermediate, \r\n            mdiNumeric1Circle, mdiNumeric2Circle, mdiNumeric3Circle, mdiNumeric4Circle, mdiNumeric5Circle, mdiNumeric6Circle,\r\n            mdiNumeric7Circle, mdiNumeric8Circle, mdiNumeric9Circle, mdiNumeric0Circle } from '@mdi/js';\r\nfunction getRandomColor(seed) {\r\n    return Math.floor((Math.abs(Math.sin(seed) * 16777215))).toString(16);\r\n}\r\nconst icons = {\r\n    'cell wall': mdiWall,\r\n    'cell visited': mdiCheckboxBlankOutline,\r\n    'cell done': mdiCheckboxIntermediate,\r\n    1: mdiNumeric1Circle,\r\n    2: mdiNumeric2Circle,\r\n    3: mdiNumeric3Circle,\r\n    4: mdiNumeric4Circle,\r\n    5: mdiNumeric5Circle,\r\n    6: mdiNumeric6Circle,\r\n    7: mdiNumeric7Circle,\r\n    8: mdiNumeric8Circle,\r\n    9: mdiNumeric9Circle,\r\n    0: mdiNumeric0Circle\r\n}\r\nexport default function Prob1Cell({key, mouseStart, mouseHover, mouseEnd, isWall, isVisited, isVisiting, room_no}) {\r\n    var randomColor = 'b2c1c9';\r\n    let name = 'cell';\r\n    if(isWall)\r\n    {\r\n        name = 'cell wall';\r\n        randomColor = '211112';\r\n    }\r\n    if(isVisited||isVisiting)\r\n    {\r\n        name = room_no%10;\r\n        randomColor = getRandomColor(room_no);\r\n    }\r\n    return (\r\n        <IconButton className={''}\r\n                size='small'\r\n                dark\r\n                bordered\r\n                text={false}\r\n                onMouseDown={()=>mouseStart(key)}\r\n                onMouseEnter={()=>mouseHover(key)}\r\n                onMouseUp={()=>mouseEnd(key)}\r\n            >\r\n                <Icon path={icons[name]}\r\n                    size={1}\r\n                    color= {`#${randomColor}`}\r\n                    />\r\n        </IconButton>\r\n    );\r\n}","import React from 'react';\r\nimport Cell from './Prob1Cell';\r\nexport default function Prob1Grid({mouseStart, mouseHover, mouseEnd, walls, visited, visiting, rooms, room_ctr}){\r\n    const N = 12    // number of rows\r\n    const M = 12    // number of columns\r\n    const grid = []\r\n    for( let row = 0; row < N; row++)\r\n    {\r\n        grid.push([])\r\n        for( let col = 0; col < M; col++)\r\n        {\r\n            let key = `${row} ${col}`\r\n            grid[row].push(<Cell \r\n                key={key} \r\n                mouseStart={()=> mouseStart(key)}\r\n                mouseHover={()=> mouseHover(key)} \r\n                mouseEnd={()=> mouseEnd(key)} \r\n                isWall={walls.includes(key)} \r\n                isVisited={visited.includes(key)}\r\n                isVisiting={visiting.includes(key)}\r\n                room_no={rooms[key]}\r\n                />)\r\n        }\r\n    }\r\n    return (\r\n        <div className='grid-board'>\r\n            {grid}\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Grid from './components/Prob1Grid';\nimport Button from './components/Button';\nconst bfs = (walls, visited, visiting, rooms, room_ctr) => {\n  const N = 12\n  const M = 12\n  const dx = [0, 0, 1, -1, 1, 1, -1, -1];\n  const dy = [1, -1, 0, 0, -1, 1, 1, -1];\n  var q = [];\n  var room_list = rooms\n  let vis = new Array(N);\n  for (let row = 0; row < N; row++) \n  {\n      vis[row] = new Array(M).fill(0);\n  }\n  for(let row=0;row<N;row++)\n  {\n    for(let col=0;col<M;col++)\n    {\n      if(visited.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1;\n      }\n      if(visiting.includes(`${row} ${col}`))\n      {\n        vis[row][col] = 1\n        q.unshift([row, col])\n      }\n    }\n  }\n  while(q.length>0)\n  {\n    let [x, y] = q.pop()\n    let dad = `${x} ${y}`\n    visited.unshift(dad)\n    visiting = visiting.filter(item=>item!==dad)\n    \n    for(let i=0;i<4;i++)\n    {\n      let curr_x = x+dx[i];\n      let curr_y = y+dy[i];\n      if(curr_x<0||curr_x>=N||curr_y<0||curr_y>=M)continue;\n\n      let child = `${curr_x} ${curr_y}`\n      \n      if(vis[curr_x][curr_y]===0 && !walls.includes(child))\n      {\n          room_list[child]=room_ctr\n          vis[curr_x][curr_y] = 1\n          visiting.unshift(child)\n      }\n    }\n  }\n  return [visited, visiting, room_list]\n}\nexport default function Copy() {\n  const [walls, setWalls] = useState([])\n  const [visited, setVisited] = useState([])\n  const [visiting, setVisiting] = useState([])\n\n  const [pressed, setPressed] = useState(false)\n  const [disable_start, setDisable_start] = useState(false)\n\n  const [room_ctr, setRoom_ctr] = useState(0)\n  const [rooms, setRooms] = useState({})\n\n  const mouseStart = (key)=>{\n    if(!disable_start)\n    {\n      setPressed(true)\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n\n  const mouseHover = (key) => {\n    if(!pressed)return\n    else\n    {\n      if(!walls.includes(key))\n        setWalls([...walls, key])\n      else\n        setWalls(walls.filter(item => item !== key))\n    }\n  }\n  useEffect(()=>{\n    setTimeout(()=>{\n      if(visiting.length>0)\n      {\n        let [t1, t2, t3] = bfs(walls, visited, visiting, rooms, room_ctr)\n        setVisited(t1)\n        setVisiting(t2)\n        setRooms(t3)\n      }\n     }, 10)\n  })\n  useEffect(()=>{\n    if(disable_start && !visiting.length)\n    {\n      console.log(rooms)\n      for(let i=0;i<12;i++)\n      {\n        for(let j=0;j<12;j++)\n        {\n          let pos = `${i} ${j}`;\n          if(!visited.includes(pos) && !walls.includes(pos))\n          {\n            var x=rooms\n            x[pos]=room_ctr+1\n            setRooms(x)\n            setRoom_ctr(room_ctr+1)\n            setVisiting([pos]);return;\n          }\n        }\n      }\n    }\n  })\n\n  const mouseEnd = (key) =>{\n    setPressed(false)\n  }\n  const buttonClick=(type)=> {\n    if(type==='start')\n    {\n      setDisable_start(true)\n    }\n  }\n\n  return (\n    <div onMouseUp={()=>mouseEnd('')} style={{display: 'flex', justifyContent: 'space-around'}}>\n      <Grid \n      mouseStart={mouseStart}\n      mouseHover={mouseHover}\n      mouseEnd={mouseEnd}\n      walls={walls} \n      visited={visited} \n      visiting={visiting}\n      room_ctr={room_ctr}\n      rooms={rooms}\n      />\n      <div className='action-buttons' style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-around'}}>\n        <Button\n        type = 'source'\n        content = {`Room no: ${room_ctr}`}\n        buttonClick = {buttonClick}\n        disable = {false}  \n        />\n        <Button\n          type = 'start'\n          content = 'Start'\n          buttonClick = {buttonClick}\n          disable = {disable_start}  \n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport {Route, Link, BrowserRouter as Router, Routes } from 'react-router-dom';\r\nimport App from './App';\r\nimport Prob1 from './Prob1';\r\n//import { Button } from 'ui-neumorphism';\r\n//import 'ui-neumorphism/dist/index.css';\r\nexport default function Main() {\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <div  style={{display: 'flex'}}>\r\n                    <Link to='/'>\r\n                        <h1>GridVis</h1>\r\n                    </Link>\r\n                    <ul className='header'>\r\n                        <li>\r\n                            <Link to='/Labyrinth'>Labyrinth</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/Prob1'>Counting rooms</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='content'>\r\n                    <Routes>\r\n                        <Route path='/' element={<></>}/>\r\n                        <Route path='/Labyrinth' element={<App/>}/>\r\n                        <Route path='/Prob1' element={<Prob1/>}/>\r\n                    </Routes>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}